#! /usr/bin/env nu
#
# A script to add additional functionality to helix by teaming up with terminal
# multiplexers and TUI tools.
#
# The will use Zellij if inside a Zellij session, and otherwise will attempt to
# use wezterm

def "main" [] {
  #Open term
  if "ZELLIJ" in $env {
    zellij action new-pane -d down --cwd $env.PWD
  } else {
    wezterm cli split-pane --cwd $env.PWD
  }
}

def "main terminal" [] {
  if "ZELLIJ" in $env {
    zellij action new-pane -d down --cwd $env.PWD | ignore
  } else {
    wezterm cli split-pane --cwd $env.PWD | ignore
  }
}

def "main kill" [] {
  if "ZELLIJ" in $env {
    zellij action move-focus down
    zellij action close-pane
  } else {
    let pane_below = (wezterm cli get-pane-direction down)
    wezterm cli kill-pane --pane-id $pane_below | ignore
  }
}

# Send to terminal pane below
def "main send" [] {
  let text = $in
  if "ZELLIJ" in $env {
    # zellij action new-pane -d down --cwd $env.PWD | ignore
    # TODO
  } else {
    let pane_below = (wezterm cli get-pane-direction down)
    echo $text | wezterm cli send-text --pane-id $pane_below | ignore
  }
}

def "main lazygit" [] {
  if "ZELLIJ" in $env {
    zellij run --close-on-exit --in-place -- lazygit | ignore
  } else {
    wezterm cli split-pane --cwd $env.PWD -- lazygit | ignore
  }
}

def "main blame" [] {
  let status = ( helix_status )
  if "ZELLIJ" in $env {
    zellij run --in-place --close-on-exit --cwd $env.PWD -- tig blame $status.file $"+($status.line)"  | ignore
  } else {
    wezterm cli split-pane --cwd $env.PWD -- tig blame $status.file $"+($status.line)" | ignore
  }
}

def "main repl" [] {
  let status = ( helix_status )
  let repl_bin = match ($status.file | path parse | get extension) {
    nix => ['nix', 'repl'],
    _ => ['nu'],
  }
  if "ZELLIJ" in $env {
    zellij run -d down --close-on-ext --cwd $env.PWD -- ...$repl_bin | ignore
  } else {
    wezterm cli split-pane --cwd $env.PWD -- ...$repl_bin | ignore
  }
}

# Returns a table with the current helix file and line
def helix_status [] {
  if "ZELLIJ" in $env {
    zellij action dump-screen /tmp/zellij.out
    open /tmp/zellij.out | get_status_line
  } else {
    wezterm cli get-text | get_status_line
  }
}

# Reads full text of a Helix window from stdin, isolates the status line (second last line)
# and parses into a table
def get_status_line [] {
    $in
    | lines 
    | last 2 
    | first 
    | parse -r ' (?<mode>\w+)\s+(?<file>\S+)\s[^â”‚]* (?<line>\d+):(?<char>\d+)'
    | get 0
}
